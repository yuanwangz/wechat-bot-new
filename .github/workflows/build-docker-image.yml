name: Build and Push Docker Image

on:
  push:
    branches: [ "main", "master" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main", "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels)
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Prepare build context
      run: |
        # 确保目录存在
        mkdir -p build/buiding/injector-box/root/bin || true
        
        # 复制 funtool 相关文件到构建上下文
        if [ -f "build/funtool/funtool.4.0.0.26.disable.auto.update.exe" ]; then
          cp build/funtool/funtool.4.0.0.26.disable.auto.update.exe build/buiding/injector-box/root/bin/
          echo "✓ Copied funtool executable"
        else
          echo "⚠ Warning: funtool executable not found"
        fi
        
        if [ -f "build/funtool/inject-dll" ]; then
          cp build/funtool/inject-dll build/buiding/injector-box/root/bin/
          echo "✓ Copied inject-dll"
        else
          echo "⚠ Warning: inject-dll not found"
        fi
        
        if [ -f "build/funtool/inject-monitor" ]; then
          cp build/funtool/inject-monitor build/buiding/injector-box/root/bin/
          echo "✓ Copied inject-monitor"
        else
          echo "⚠ Warning: inject-monitor not found"
        fi
        
        # 显示构建上下文内容用于调试
        echo "Build context structure:"
        ls -la build/buiding/injector-box/
        echo "Binary files:"
        ls -la build/buiding/injector-box/root/bin/

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: build/buiding/injector-box
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate artifact attestation
      if: github.event_name != 'pull_request'
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.build.outputs.digest }}
        push-to-registry: true